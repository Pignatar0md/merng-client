{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport PostCard from '../Components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POST_QUERY);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n      className: \"page-title\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Recent Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : data && data.getPosts.map(post => /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: [post.body, \" - \", post.username]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)) // <div>\n      //   {\n      //     data.getPosts.map(({ id, body, username }) => <div key={id}>{body} {username}</div>)\n      //   }\n      // </div>\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nconst FETCH_POST_QUERY = gql`{\n  getPosts{\n    id body createdAt username likeCount\n    likes{\n      username\n    }\n    commentCount\n    comments{\n      id username createdAt body\n    }\n  }\n}`;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Home.js"],"names":["React","useQuery","Grid","gql","PostCard","Home","loading","data","FETCH_POST_QUERY","getPosts","map","post","body","username","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBN,QAAQ,CAACO,gBAAD,CAAlC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA,4BACE,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA,6BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD,CAAM,GAAN;AAAA,gBACGF,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,GAGNC,IAAI,IAAIA,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,IAAI,iBAC9B,QAAC,IAAD,CAAM,MAAN;AAAA,mBACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,QADtB;AAAA,SAAkBF,IAAI,CAACG,EAAvB;AAAA;AAAA;AAAA;AAAA,cADQ,CAHF,CASN;AACA;AACA;AACA;AACA;;AAdJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7BD;;GAAMT,I;UACsBJ,Q;;;KADtBI,I;AA+BN,MAAMG,gBAAgB,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXA;AAaA,eAAeE,IAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid } from 'semantic-ui-react'\nimport gql from 'graphql-tag';\nimport PostCard from '../Components/PostCard';\n\nconst Home = () => {\n  const { loading, data } = useQuery(FETCH_POST_QUERY);\n\n  return (\n    <Grid columns={3}>\n      <Grid.Row className=\"page-title\">\n        <Grid.Column>\n          <h1>Recent Posts</h1>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        {loading ? (\n          <h3>Loading...</h3>\n        ) : (\n          data && data.getPosts.map(post => (\n          <Grid.Column key={post.id}>\n            {post.body} - {post.username}\n            {/* <PostCard info={post} /> */}\n          </Grid.Column>))\n\n          // <div>\n          //   {\n          //     data.getPosts.map(({ id, body, username }) => <div key={id}>{body} {username}</div>)\n          //   }\n          // </div>\n        )}\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nconst FETCH_POST_QUERY = gql`{\n  getPosts{\n    id body createdAt username likeCount\n    likes{\n      username\n    }\n    commentCount\n    comments{\n      id username createdAt body\n    }\n  }\n}`;\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}