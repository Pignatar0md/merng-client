{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POST_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 3,\n    divided: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) // <div>\n  //   {\n  //     data.getPosts.map(({ id, body, username }) => <div key={id}>{body} {username}</div>)\n  //   }\n  // </div>\n  ;\n};\n\n_s(Home, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nconst FETCH_POST_QUERY = gql`{\n  getPosts{\n    id body createdAt username likeCount\n    likes{\n      username\n    }\n    commentCount\n    comments{\n      id username createdAt body\n    }\n  }\n}`;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Home.js"],"names":["React","useQuery","gql","Home","loading","data","FETCH_POST_QUERY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBJ,QAAQ,CAACK,gBAAD,CAAlC;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,OAAO,MAAzB;AAAA,2BACA,QAAC,IAAD,CAAM,GAAN;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF,CAcE;AACA;AACA;AACA;AACA;AAlBF;AAoBD,CA5BD;;GAAMD,I;UACsBF,Q;;;KADtBE,I;AA8BN,MAAMG,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXA;AAaA,eAAeC,IAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst Home = () => {\n  const { loading, data } = useQuery(FETCH_POST_QUERY);\n  if (loading) {\n    return <div>\n      Loading...\n    </div>;\n  }\n\n  return (\n    <Grid columns={3} divided>\n    <Grid.Row>\n      <Grid.Column>\n        <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n      </Grid.Column>\n      <Grid.Column>\n        <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n      </Grid.Column>\n      <Grid.Column>\n        <Image src='https://react.semantic-ui.com/images/wireframe/media-paragraph.png' />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n    // <div>\n    //   {\n    //     data.getPosts.map(({ id, body, username }) => <div key={id}>{body} {username}</div>)\n    //   }\n    // </div>\n  )\n}\n\nconst FETCH_POST_QUERY = gql`{\n  getPosts{\n    id body createdAt username likeCount\n    likes{\n      username\n    }\n    commentCount\n    comments{\n      id username createdAt body\n    }\n  }\n}`;\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}