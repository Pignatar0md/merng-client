{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Button, Grid, Image, Card, Icon, Label } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/authContext';\nimport LikeButton from '../Components/LikeButton';\nimport DeleteButton from '../Components/DeleteButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const postId = match.params.postId;\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const deletePostCallback = () => history.push('/');\n\n  let postMarkup;\n\n  if (!data) {\n    postMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this);\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = data.getPost;\n    postMarkup = /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n            size: \"small\",\n            float: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: moment(createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              extra: true,\n              children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n                user: user,\n                post: {\n                  id,\n                  likeCount,\n                  likes\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                as: \"div\",\n                labelPosition: \"right\",\n                onClick: () => console.log('comment on post'),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  basic: true,\n                  color: \"blue\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    basic: true,\n                    color: \"blue\",\n                    pointing: \"left\",\n                    children: commentCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), user && user.username === username && /*#__PURE__*/_jsxDEV(DeleteButton, {\n                postId: id,\n                callback: deletePostCallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: moment(comment.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  return postMarkup;\n};\n\n_s(SinglePost, \"Yaawti91RSS55367kqFTzk8QaN0=\", false, function () {\n  return [useQuery];\n});\n\n_c = SinglePost;\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js"],"names":["React","useContext","gql","moment","Button","Grid","Image","Card","Icon","Label","useQuery","AuthContext","LikeButton","DeleteButton","SinglePost","match","history","postId","params","user","data","FETCH_POST_QUERY","variables","deletePostCallback","push","postMarkup","id","body","createdAt","username","comments","likes","likeCount","commentCount","getPost","fromNow","console","log","map","comment"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Button, Grid, Image, Card, Icon, Label } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/authContext';\nimport LikeButton from '../Components/LikeButton';\nimport DeleteButton from '../Components/DeleteButton';\n\nconst SinglePost = ({ match, history }) => {\n  const postId = match.params.postId;\n  const { user } = useContext(AuthContext);\n\n  const { data } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const deletePostCallback = () => history.push('/');\n\n  let postMarkup;\n\n\n  if (!data) {\n    postMarkup = <p>Loading post...</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = data.getPost;\n\n    postMarkup = (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={2}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n              size=\"small\"\n            float=\"right\" />\n            </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>\n                  {username}\n                </Card.Header>\n                <Card.Meta>\n                  {moment(createdAt).fromNow()}\n                </Card.Meta>\n                <Card.Description>{body}</Card.Description>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                <Button\n                  as=\"div\"\n                  labelPosition=\"right\"\n                  onClick={() => console.log('comment on post')}>\n                    <Button basic color=\"blue\">\n                      <Icon name=\"comments\"/>\n                      <Label basic color=\"blue\" pointing=\"left\">\n                        {commentCount}\n                      </Label>\n                    </Button>\n                </Button>\n                {user && user.username === username && (\n                  <DeleteButton postId={id} callback={deletePostCallback} />\n                )}\n              </Card.Content>\n            </Card>\n            {comments.map(comment => (\n              <Card fluid key={comment.id}>\n                <Card.Content>\n                  <Card.Header>\n                    {comment.username}\n                  </Card.Header>\n                  <Card.Meta>\n                    {moment(comment.createdAt).fromNow()}\n                  </Card.Meta>\n                  <Card.Description>\n                    {comment.body}\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n            </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n\n  return postMarkup;\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}