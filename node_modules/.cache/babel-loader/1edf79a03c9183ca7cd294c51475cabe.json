{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: ''\n  });\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      //this will be triggered if the mutation is successfully executed\n      console.log(result);\n    },\n\n    variables: values\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n    addUser(); //esto llama a addUser, que a su vez usa REGISTER_USER, que es igual a: \n\n    {\n      /**\n       mutation {\n         register(registerInput:{\n           username: \"lala\"\n           password: \"12345678\"\n           confirmPassword: \"12345678\"\n           email: \"lala@gmail.com\"\n         }) {\n           id\n           email\n           token\n           username\n           createdAt\n         }\n       }\n      */\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"John Doe\",\n        name: \"username\",\n        value: values.username,\n        type: \"text\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"E-mail\",\n        type: \"email\",\n        placeholder: \"johndoe@pipmail.com\",\n        name: \"email\",\n        value: values.email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Password\",\n        type: \"password\",\n        placeholder: \"Jhon1234\",\n        name: \"password\",\n        value: values.password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        placeholder: \"Jhon1234\",\n        name: \"confirmPassword\",\n        value: values.confirmPassword,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Register, \"vQE4x8DbsF5ZWw6ifA0tT1hJBSk=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\nconst REGISTER_USER = gql`\nmutation register (\n  $username: String!\n  $email: String!\n  $password: String!\n  $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id email username createdAt token\n    }\n  }\n`;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/Register.js"],"names":["React","useState","Form","Button","useMutation","gql","Register","values","setValues","username","password","confirmPassword","email","onChange","event","target","name","value","addUser","loading","REGISTER_USER","update","proxy","result","console","log","variables","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst Register = () => {\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: ''\n  });\n\n  const onChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {//this will be triggered if the mutation is successfully executed\n      console.log(result);\n    }, variables: values\n  });\n\n  const onSubmit = event => {\n    event.preventDefault();\n    addUser();//esto llama a addUser, que a su vez usa REGISTER_USER, que es igual a: \n    {/**\n      mutation {\n        register(registerInput:{\n          username: \"lala\"\n          password: \"12345678\"\n          confirmPassword: \"12345678\"\n          email: \"lala@gmail.com\"\n        }) {\n          id\n          email\n          token\n          username\n          createdAt\n        }\n      }\n    */}\n  }\n\n  return <div className=\"form-container\">\n    <Form onSubmit={onSubmit} noValidate>\n      <h1>\n        Register\n      </h1>\n      <Form.Input\n        label=\"Username\" \n        placeholder=\"John Doe\" \n        name=\"username\" \n        value={values.username}\n        type=\"text\"\n        onChange={onChange} />\n      <Form.Input\n        label=\"E-mail\" \n        type=\"email\"\n        placeholder=\"johndoe@pipmail.com\" \n        name=\"email\"\n        value={values.email}\n        onChange={onChange} />\n      <Form.Input\n        label=\"Password\" \n        type=\"password\" \n        placeholder=\"Jhon1234\" \n        name=\"password\" \n        value={values.password}\n        onChange={onChange} />\n      <Form.Input\n        label=\"Confirm Password\" \n        type=\"password\" \n        placeholder=\"Jhon1234\" \n        name=\"confirmPassword\"\n        value={values.confirmPassword}\n        onChange={onChange} />\n\n        <Button type=\"submit\" primary>\n          Register\n        </Button>\n    </Form>\n  </div>;\n}\n\nconst REGISTER_USER = gql`\nmutation register (\n  $username: String!\n  $email: String!\n  $password: String!\n  $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id email username createdAt token\n    }\n  }\n`;\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}