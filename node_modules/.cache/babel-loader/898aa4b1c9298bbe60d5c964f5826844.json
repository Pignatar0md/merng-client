{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Components/DeleteButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport PopUp from '../util/PopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteButton = ({\n  postId,\n  callback,\n  commentId\n}) => {\n  _s();\n\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n  const [deletePostOrComment] = useMutation(mutation, {\n    update(proxy) {\n      setConfirmOpen(false);\n\n      if (!commentId) {\n        //deletes a post\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        });\n        data.getPosts = data.getPosts.filter(p => p.id !== postId); //delete the post \n\n        proxy.writeQuery({\n          query: FETCH_POSTS_QUERY,\n          data\n        });\n      } //else {}//deletes a comment\n\n\n      if (callback) callback();\n    },\n\n    variables: {\n      postId,\n      commentId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PopUp, {\n      content: commentId ? `Delete comment` : 'Delete post',\n      inverted: true,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        as: \"div\",\n        color: \"red\",\n        floated: \"right\",\n        onClick: () => setConfirmOpen(true),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"trash\",\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n      open: confirmOpen,\n      onCancel: () => setConfirmOpen(false),\n      onConfirm: deletePostOrComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DeleteButton, \"xImpQ0E4sk/7bMf7euD3NZnhNEE=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteButton;\nconst DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\nconst DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId commentId: $commentId) {\n      id\n      comments {\n        id username createdAt body\n      }\n      commentCount\n    }\n  } \n`;\nexport default DeleteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteButton\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Components/DeleteButton.js"],"names":["React","useState","gql","Button","Confirm","Icon","useMutation","FETCH_POSTS_QUERY","PopUp","DeleteButton","postId","callback","commentId","confirmOpen","setConfirmOpen","mutation","DELETE_COMMENT_MUTATION","DELETE_POST_MUTATION","deletePostOrComment","update","proxy","data","readQuery","query","getPosts","filter","p","id","writeQuery","variables","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAAA;;AAExD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMc,QAAQ,GAAGH,SAAS,GAAGI,uBAAH,GAA6BC,oBAAvD;AAEA,QAAM,CAACC,mBAAD,IAAwBZ,WAAW,CAACS,QAAD,EAAW;AAClDI,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZN,MAAAA,cAAc,CAAC,KAAD,CAAd;;AACA,UAAI,CAACF,SAAL,EAAgB;AAAE;AAChB,cAAMS,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAC3BC,UAAAA,KAAK,EAAEhB;AADoB,SAAhB,CAAb;AAGAc,QAAAA,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASjB,MAAnC,CAAhB,CAJc,CAI6C;;AAC3DU,QAAAA,KAAK,CAACQ,UAAN,CAAiB;AAAEL,UAAAA,KAAK,EAAEhB,iBAAT;AAA4Bc,UAAAA;AAA5B,SAAjB;AACD,OARW,CAQV;;;AAGF,UAAIV,QAAJ,EAAcA,QAAQ;AACvB,KAbiD;;AAclDkB,IAAAA,SAAS,EAAE;AACTnB,MAAAA,MADS;AAETE,MAAAA;AAFS;AAduC,GAAX,CAAzC;AAoBA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEA,SAAS,GAAI,gBAAJ,GAAsB,aAD1C;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,eAEL,QAAC,MAAD;AACE,QAAA,EAAE,EAAC,KADL;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,OAAO,EAAE,MAAME,cAAc,CAAC,IAAD,CAJ/B;AAAA,+BAKE,QAAC,IAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAE;AAAEgB,YAAAA,MAAM,EAAE;AAAV;AAFT;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,OAAD;AACE,MAAA,IAAI,EAAEjB,WADR;AAEE,MAAA,QAAQ,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFhC;AAGE,MAAA,SAAS,EAAEI;AAHb;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAuBD,CAjDD;;GAAMT,Y;UAM0BH,W;;;KAN1BG,Y;AAmDN,MAAMQ,oBAAoB,GAAGf,GAAI;AACjC;AACA;AACA;AACA,CAJA;AAMA,MAAMc,uBAAuB,GAAGd,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAeO,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport PopUp from '../util/PopUp';\n\nconst DeleteButton = ({ postId, callback, commentId }) => {\n\n  const [confirmOpen, setConfirmOpen] = useState(false);\n\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n\n  const [deletePostOrComment] = useMutation(mutation, {\n    update(proxy) {\n      setConfirmOpen(false);\n      if (!commentId) { //deletes a post\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        });\n        data.getPosts = data.getPosts.filter(p => p.id !== postId);//delete the post \n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });  \n      } //else {}//deletes a comment\n        \n      \n      if (callback) callback();\n    },\n    variables: {\n      postId,\n      commentId\n    }\n  })\n\n  return (\n    <>\n      <PopUp \n        content={commentId ? `Delete comment` : 'Delete post'}\n        inverted\n        trigger={\n\n          <Button\n            as=\"div\"\n            color=\"red\"\n            floated=\"right\"\n            onClick={() => setConfirmOpen(true)}>\n            <Icon\n              name=\"trash\"\n              style={{ margin: 0 }} />\n          </Button>\n        } />\n      <Confirm\n        open={confirmOpen}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={deletePostOrComment} />\n    </>\n  );\n};\n\nconst DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\n\nconst DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId commentId: $commentId) {\n      id\n      comments {\n        id username createdAt body\n      }\n      commentCount\n    }\n  } \n`;\n\nexport default DeleteButton;"]},"metadata":{},"sourceType":"module"}