{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Button, Grid, Image, Card, Icon, Label } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/authContext';\nimport LikeButton from '../Components/LikeButton';\nimport DeleteButton from '../Components/DeleteButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = ({\n  match\n}) => {\n  _s();\n\n  const postId = match.params.postId;\n  debugger;\n  const {\n    user\n  } = useContext(AuthContext); // const { data: { getPost } } = useQuery(FETCH_POST_QUERY, {\n\n  const pepe = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  let postMarkup;\n\n  if (!getPost) {\n    postMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this); // const {\n    //   id,\n    //   body,\n    //   createdAt,\n    //   username,\n    //   comments,\n    //   likes,\n    //   likeCount,\n    //   commentCount\n    // } = getPost;\n    // return <Grid>\n    //   <Grid.Row>\n    //     <Grid.Column width={2}>\n    //       <Image\n    //         src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n    //         size=\"small\"\n    //       float=\"right\" />\n    //       </Grid.Column>\n    //     <Grid.Column width={10}>\n    //       <Card fluid>\n    //         <Card.Content>\n    //           <Card.Header>\n    //             {username}\n    //           </Card.Header>\n    //           <Card.Meta>\n    //             {moment(createdAt).fromNow()}\n    //           </Card.Meta>\n    //           <Card.Description>{body}</Card.Description>\n    //         </Card.Content>\n    //         <hr />\n    //         <Card.Content extra>\n    //           <LikeButton user={user} post={{ id, likeCount, likes }} />\n    //           <Button\n    //             as=\"div\"\n    //             labelPosition=\"right\"\n    //             onClick={() => console.log('comment on post')}>\n    //               <Button basic color=\"blue\">\n    //                 <Icon name=\"comments\"/>\n    //                 <Label basic color=\"blue\" pointing=\"left\">\n    //                   {commentCount}\n    //                 </Label>\n    //               </Button>\n    //           </Button>\n    //           {user && user.username === username && (\n    //             <DeleteButton postId={id} />\n    //           )}\n    //         </Card.Content>\n    //       </Card>\n    //       </Grid.Column>\n    //   </Grid.Row>\n    // </Grid>;\n\n  }\n};\n\n_s(SinglePost, \"i3kX5vxQmaOfaceUEqOmK6FiDxo=\", false, function () {\n  return [useQuery];\n});\n\n_c = SinglePost;\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js"],"names":["React","useContext","gql","moment","Button","Grid","Image","Card","Icon","Label","useQuery","AuthContext","LikeButton","DeleteButton","SinglePost","match","postId","params","user","pepe","FETCH_POST_QUERY","variables","postMarkup","getPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,QAAuD,mBAAvD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAEhC,QAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaD,MAA5B;AACA;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWjB,UAAU,CAACU,WAAD,CAA3B,CAJgC,CAMhC;;AACE,QAAMQ,IAAI,GAAGT,QAAQ,CAACU,gBAAD,EAAmB;AACxCC,IAAAA,SAAS,EAAE;AACTL,MAAAA;AADS;AAD6B,GAAnB,CAArB;AAKF,MAAIM,UAAJ;;AACA,MAAI,CAACC,OAAL,EAAc;AACZD,IAAAA,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AACD,GAFD,MAEO;AACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,CAvED;;GAAMR,U;UAOWJ,Q;;;KAPXI,U;AAyEN,MAAMM,gBAAgB,GAAGlB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,eAAeY,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Button, Grid, Image, Card, Icon, Label } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/authContext';\nimport LikeButton from '../Components/LikeButton';\nimport DeleteButton from '../Components/DeleteButton';\n\nconst SinglePost = ({ match }) => {\n  \n  const postId = match.params.postId;\n  debugger\n  const { user } = useContext(AuthContext);\n\n  // const { data: { getPost } } = useQuery(FETCH_POST_QUERY, {\n    const pepe = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post...</p>;\n  } else {\n    <div>Post</div>\n    // const {\n    //   id,\n    //   body,\n    //   createdAt,\n    //   username,\n    //   comments,\n    //   likes,\n    //   likeCount,\n    //   commentCount\n    // } = getPost;\n\n    \n    // return <Grid>\n    //   <Grid.Row>\n    //     <Grid.Column width={2}>\n    //       <Image\n    //         src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n    //         size=\"small\"\n    //       float=\"right\" />\n    //       </Grid.Column>\n    //     <Grid.Column width={10}>\n    //       <Card fluid>\n    //         <Card.Content>\n    //           <Card.Header>\n    //             {username}\n    //           </Card.Header>\n    //           <Card.Meta>\n    //             {moment(createdAt).fromNow()}\n    //           </Card.Meta>\n    //           <Card.Description>{body}</Card.Description>\n    //         </Card.Content>\n    //         <hr />\n    //         <Card.Content extra>\n    //           <LikeButton user={user} post={{ id, likeCount, likes }} />\n    //           <Button\n    //             as=\"div\"\n    //             labelPosition=\"right\"\n    //             onClick={() => console.log('comment on post')}>\n    //               <Button basic color=\"blue\">\n    //                 <Icon name=\"comments\"/>\n    //                 <Label basic color=\"blue\" pointing=\"left\">\n    //                   {commentCount}\n    //                 </Label>\n    //               </Button>\n    //           </Button>\n    //           {user && user.username === username && (\n    //             <DeleteButton postId={id} />\n    //           )}\n    //         </Card.Content>\n    //       </Card>\n    //       </Grid.Column>\n    //   </Grid.Row>\n    // </Grid>;\n  }\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}