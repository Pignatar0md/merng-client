{"ast":null,"code":"var _jsxFileName = \"/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Grid, Image, Card } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport LikeButton from '../Components/LikeButton';\nimport { AuthContext } from '../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = ({\n  match\n}) => {\n  _s();\n\n  const postId = match.params.postId;\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    data: {\n      getPost\n    }\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  let postMarkup;\n\n  if (!getPost) {\n    postMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this);\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n    postMarkup = /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n            size: \"small\",\n            float: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: moment(createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              extra: true,\n              children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n                user: user,\n                post: {\n                  id,\n                  likeCount,\n                  likes\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                as: \"div\",\n                labelPosition: \"right\",\n                onClick: () => console.log('comment on post'),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  basic: true,\n                  color: \"blue\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    basic: true,\n                    color: \"blue\",\n                    pointing: \"left\",\n                    children: commentCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(SinglePost, \"RHDll2ZHSsiDkZOqEUpSblV1m4w=\", false, function () {\n  return [useQuery];\n});\n\n_c = SinglePost;\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost($postId: postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/marcelopignataro/DocumentosNoIcloud/mernDojo/5hMernGProject/client/src/Pages/SinglePost.js"],"names":["React","useContext","gql","moment","Grid","Image","Card","useQuery","LikeButton","AuthContext","SinglePost","match","postId","params","user","data","getPost","FETCH_POST_QUERY","variables","postMarkup","id","body","createdAt","username","comments","likes","likeCount","commentCount","fromNow","console","log"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport moment from 'moment';\nimport { Grid, Image, Card } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport LikeButton from '../Components/LikeButton';\nimport { AuthContext } from '../context/authContext';\n\nconst SinglePost = ({ match }) => {\n  const postId = match.params.postId;\n  const { user } = useContext(AuthContext);\n\n  const { data: { getPost } } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  let postMarkup;\n  if (!getPost) {\n    postMarkup = <p>Loading post...</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n\n    postMarkup = (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={2}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n              size=\"small\"\n            float=\"right\" />\n            </Grid.Column>\n          <Grid.Column width={10}>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>\n                  {username}\n                </Card.Header>\n                <Card.Meta>\n                  {moment(createdAt).fromNow()}\n                </Card.Meta>\n                <Card.Description>{body}</Card.Description>\n              </Card.Content>\n              <hr />\n              <Card.Content extra>\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\n                <Button\n                  as=\"div\"\n                  labelPosition=\"right\"\n                  onClick={() => console.log('comment on post')}>\n                    <Button basic color=\"blue\">\n                      <Icon name=\"comments\"/>\n                      <Label basic color=\"blue\" pointing=\"left\">\n                        {commentCount}\n                      </Label>\n                    </Button>\n                </Button>\n              </Card.Content>\n            </Card>\n            </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost($postId: postId) {\n      id body createdAt username likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id username createdAt body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}